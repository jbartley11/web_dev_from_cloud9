Relational vs NoSQL

relational
sql based
structure through table
not very flexible

NoSQL
non relational
flexible
can nest data
like json objects
no tables

how to choose best db??

mongodb install instructions
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
sudo apt-get update
sudo apt-get install -y mongodb-org
You should now have mongo 3.6.2 or newer, you can double check with mongo --version 

Now type cd in the terminal and hit enter to go into the root directory ~

Enter the following:

mkdir data
echo "mongod --dbpath=data --nojournal" > mongod
chmod a+x mongod
Now, in order to run mongod you'll first need to cd into root ~ then run ./mongod 

Note: You no longer need to follow/enter the commands in the next video, as the ones you just entered from above will have replaced them

----------------------

Additionally, after you're up and running with mongo, be sure to shut down your ./mongod server each time you're done working. You can do this with ctrl + c 

If you leave it running then Cloud 9 could timeout and cause mongo to crash. If this happens, try the following steps to repair it. 

From the command line, run:

cd ~
./mongod --repair
If you're still having trouble getting it to run then find the /data directory (it should be inside of ~) and cd into it. Once inside, run rm mongod.lock then cd back into ~ and run ./mongod again (see below).

cd ~/data
rm mongod.lock
cd
./mongod
If you continue to have difficulties with this then please open up a new discussion so we can assist you.

As a side note: In the Mongo Shell Basics video you'll see Colt use the show collections command which will show something called system.indexes . This will no longer show up in the latest versions of MongoDB. You can read more about this here.

used this:
https://community.c9.io/t/how-to-setup-mongodb-in-aws-c9/22553/3
mongod --bind_ip=$IP --dbpath=/home/ec2-user/environment/data --nojournal

mongod - starts mongo daemon
mongo - shell

commands in shell
help
show dbs
use <dbname> - will switch active db if db does not exist it will create it

insert - db.dogs.insert(<data>) - dogs is collection

show collections - see all collections in db
to add data you will use collections 
collection of dogs
with name, age, breed
{name:"Rusty", breed:"Mutt"}

find - db.dogs.find() - if you don't pass anything it will return all
_id - objectid - use to refer to specific item
db.dogs.find({name:"Rusty"})

update
db.dogs.update({name:"Kingsley"}, {name:"Kingsley", breed: "Old English Sheepdog"})
db.dogs.update({name: "Kingsley"}, {$set: {breed:"OES", isCute: true}})
$set only changes what has been added to object 

remove
db.dogs.remove({name:"Rusty"})
CRUD - create read update delete


Mongoose
package that helps us interact with mongo within our js code

